name: CI

on:
  pull_request:
    branches: [ master ]

jobs:
  execute_basic_test002_articles_parallel_test_cases:
    runs-on: ubuntu-20.04
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false
      matrix:
        test_cases: [0, 1, 2, 3]

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute basic test002 articles parallel test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/basic_tests/test002_articles.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "NODE_TOTAL=${{ strategy.job-total }} NODE_INDEX=${{ matrix.test_cases }} nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 --with-parallel -A 'not series' -m '$TEST_REG' $TEST_FILE"


  execute_basic_test003_testplans_parallel_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_basic_test002_articles_parallel_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false
      matrix:
        test_cases: [0, 1, 2, 3]

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute basic test003 testplans parallel test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/basic_tests/test003_testplans.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "NODE_TOTAL=${{ strategy.job-total }} NODE_INDEX=${{ matrix.test_cases }} nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 --with-parallel -A 'not series' -m '$TEST_REG' $TEST_FILE"


  execute_basic_test004_testunits_parallel_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_basic_test003_testplans_parallel_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false
      matrix:
        test_cases: [0, 1, 2, 3]

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute basic test004 testunits parallel test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/basic_tests/test004_testunits.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "NODE_TOTAL=${{ strategy.job-total }} NODE_INDEX=${{ matrix.test_cases }} nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 --with-parallel -A 'not series' -m '$TEST_REG' $TEST_FILE"


  execute_basic_test005_contacts_parallel_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_basic_test004_testunits_parallel_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false
      matrix:
        test_cases: [0, 1, 2, 3]

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute basic test005 contacts parallel test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/basic_tests/test005_contacts.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "NODE_TOTAL=${{ strategy.job-total }} NODE_INDEX=${{ matrix.test_cases }} nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 --with-parallel -A 'not series' -m '$TEST_REG' $TEST_FILE"


  execute_header_test007_audit_trail_parallel_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_basic_test005_contacts_parallel_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false
      matrix:
        test_cases: [0, 1, 2, 3]

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute header test007 audit trail parallel test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/header_tests/test007_audit_trail.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "NODE_TOTAL=${{ strategy.job-total }} NODE_INDEX=${{ matrix.test_cases }} nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 --with-parallel -A 'not series' -m '$TEST_REG' $TEST_FILE"


  execute_header_test010_my_profile_parallel_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_header_test007_audit_trail_parallel_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false
      matrix:
        test_cases: [0, 1, 2, 3]

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute header test010 my profile parallel test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/header_tests/test010_my_profile.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "NODE_TOTAL=${{ strategy.job-total }} NODE_INDEX=${{ matrix.test_cases }} nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 --with-parallel -A 'not series' -m '$TEST_REG' $TEST_FILE"


  execute_header_test011_rolesandpermissions_parallel_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_header_test010_my_profile_parallel_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false
      matrix:
        test_cases: [0, 1, 2, 3]

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute header test011 rolesandpermissions parallel test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/header_tests/test011_rolesandpermissions.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "NODE_TOTAL=${{ strategy.job-total }} NODE_INDEX=${{ matrix.test_cases }} nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 --with-parallel -A 'not series' -m '$TEST_REG' $TEST_FILE"


  execute_basic_test002_articles_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_header_test011_rolesandpermissions_parallel_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute basic test002 articles series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/basic_tests/test002_articles.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"



  execute_basic_test004_testunits_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_basic_test002_articles_series_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute basic test004 testunits series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/basic_tests/test004_testunits.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"



  execute_basic_test003_testplans_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_basic_test004_testunits_series_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute basic test003 testplans series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/basic_tests/test003_testplans.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"



  execute_basic_test005_contacts_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_basic_test003_testplans_series_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute basic test005 contacts series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/basic_tests/test005_contacts.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"



  execute_header_test007_audit_trail_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_basic_test005_contacts_series_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute header test007 audit trail series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/header_tests/test007_audit_trail.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"



  execute_header_test010_my_profile_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_header_test007_audit_trail_series_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute header test010 my profile series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/header_tests/test010_my_profile.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"



  execute_header_test011_rolesandpermissions_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_header_test010_my_profile_series_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute header test011 rolesandpermissions series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/header_tests/test011_rolesandpermissions.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"



  execute_extended_test002_article_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_header_test011_rolesandpermissions_series_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute extended test002 article series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/extended_tests/test002_article.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"



  execute_extended_test003_testunits_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_extended_test002_article_series_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute extended test003 testunits series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/extended_tests/test003_testunits.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"



  execute_order_test001_orders_active_table_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_extended_test003_testunits_series_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute order test001 orders active table series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/order_tests/test001_orders_active_table.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"



  execute_order_test002_orders_create_edit_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_order_test001_orders_active_table_series_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute order test002 orders create edit series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/order_tests/test002_orders_create_edit.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"



  execute_order_test003_orders_duplicate_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_order_test002_orders_create_edit_series_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute order test003 orders duplicate series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/order_tests/test003_orders_duplicate.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"



  execute_order_test004_orders_without_article_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_order_test003_orders_duplicate_series_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute order test004 orders without article series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/order_tests/test004_orders_without_article.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"



  execute_order_test005_order_extended_series_test_cases:
    runs-on: ubuntu-20.04
    needs: execute_order_test004_orders_without_article_series_test_cases
    if: ${{ always()  &&  !cancelled() }}
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: pull docker image
        run:  docker pull 0xislamtaha/seleniumchromenose:83

      - name: execute order test005 order extended series test cases
        if: ${{ always()  &&  !cancelled() }}
        env:
          TEST_FILE: ui_testing/testcases/order_tests/test005_order_extended.py
          TEST_REG: test[0-9]{3}
        run: timeout 30m docker container run -t -v /dev/shm:/dev/shm -v `pwd`:/1lims-automation -e "PYTHONPATH='$PYTHONPATH:/1lims-automation" -w /1lims-automation 0xislamtaha/seleniumchromenose:83 bash -c "nosetests -vs --nologcapture --with-reportportal --rp-config-file rp.ini --rp-uuid ${{ secrets.UUID }} --rp-launch-description=${{ github.head_ref }}-${{ github.run_id }}-${{ github.run_number }} --rp-logging-level=WARNING --tc-file=config.ini --tc=browser.headless:True  --with-flaky --force-flaky --max-runs=3 --min-passes=1 -A 'series' -m '$TEST_REG' $TEST_FILE"
